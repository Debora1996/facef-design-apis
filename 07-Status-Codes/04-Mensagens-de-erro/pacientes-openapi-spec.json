{
    "openapi": "3.0.2",
    "info": {
        "title": "Pacientes",
        "version": "1.0.0",
        "description": "ProHealth - Contrato da API de Pacientes"
    },
    "servers": [
        {
            "url": "http://localhost:8080",
            "description": ""
        }
    ],
    "paths": {
        "/patients": {
            "summary": "Conjunto de pacientes atendidos pela clinica",
            "description": "Este recurso é a representação dos pacientes que precisam de atendimento médico e, para isso, solicitam marcação de consultas a partir do controle de agendamento da clínica",
            "get": {
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/PatientsResponseList"
                    },
                    "401": {
                        "$ref": "#/components/responses/ErrorResponse-401-Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/ErrorResponse-403-Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorResponse-404-NotFound"
                    },
                    "415": {
                        "$ref": "#/components/responses/ErrorResponse-415-UnsupportedMediaType"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse-500-InternalServerError"
                    },
                    "502": {
                        "$ref": "#/components/responses/ErrorResponse-502-BadGateway"
                    },
                    "503": {
                        "$ref": "#/components/responses/ErrorResponse-503-ServiceUnavailable"
                    },
                    "504": {
                        "$ref": "#/components/responses/ErrorResponse-504-GatewayTimeout"
                    }
                },
                "summary": "Consulta de pacientes",
                "description": "Operação utilizada para consultar todos os pacientes da clínica"
            },
            "put": {
                "responses": {
                    "405": {
                        "$ref": "#/components/responses/ErrorResponse-405-MethodNotAllowed"
                    }
                },
                "summary": "Atualização de pacientes",
                "description": "Operação utilizada para atualizar dados de pacientes da clínica"
            },
            "post": {
                "requestBody": {
                    "description": "Request para criação de pacientes",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatientsRequest"
                            },
                            "examples": {
                                "PatientsRequestExample": {
                                    "value": {
                                        "name": "Peter Parker",
                                        "cpf": "123.789.012-34",
                                        "phone_number": "1691234-5789",
                                        "birthdate": "2001-08-10",
                                        "height": 1.78,
                                        "weight": 76,
                                        "smoker": false,
                                        "comorbidities": [
                                            "Cirrose hepática",
                                            "Valvopatia"
                                        ],
                                        "medical_insurance": {
                                            "id": "324.5231100.3432",
                                            "operator_code": "AMIL"
                                        },
                                        "address": {
                                            "street": "Rua Luis Gois, 1200",
                                            "complement": "apto 204",
                                            "district": "Vila Mariana",
                                            "city": "São Paulo",
                                            "state": "SP",
                                            "zipcode": "04043-050"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/PatientsResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse-400-BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/ErrorResponse-401-Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/ErrorResponse-403-Forbidden"
                    },
                    "422": {
                        "$ref": "#/components/responses/ErrorResponse-422-UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse-500-InternalServerError"
                    },
                    "502": {
                        "$ref": "#/components/responses/ErrorResponse-502-BadGateway"
                    },
                    "503": {
                        "$ref": "#/components/responses/ErrorResponse-503-ServiceUnavailable"
                    },
                    "504": {
                        "$ref": "#/components/responses/ErrorResponse-504-GatewayTimeout"
                    }
                },
                "summary": "Criação de pacientes",
                "description": "Operação utilizada para cadastrar novos pacientes da clínica"
            },
            "delete": {
                "responses": {
                    "405": {
                        "$ref": "#/components/responses/ErrorResponse-405-MethodNotAllowed"
                    }
                },
                "summary": "Remoção de pacientes",
                "description": "Operação utilizada para apagar pacientes do cadastro da clínica"
            },
            "patch": {
                "responses": {
                    "405": {
                        "$ref": "#/components/responses/ErrorResponse-405-MethodNotAllowed"
                    }
                },
                "summary": "Atualização de pacientes",
                "description": "Operação utilizada para atualizar dados de pacientes da clínica"
            }
        },
        "/patients/{id}": {
            "summary": "Informações sobre o paciente atendido pela clinica",
            "description": "Este recurso é a representação de cada paciente que precisa de atendimento médico e, para isso, solicita marcação de consultas a partir do controle de agendamento da clínica",
            "get": {
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/PatientsResponse"
                    },
                    "401": {
                        "$ref": "#/components/responses/ErrorResponse-401-Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/ErrorResponse-403-Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorResponse-404-NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse-500-InternalServerError"
                    },
                    "502": {
                        "$ref": "#/components/responses/ErrorResponse-502-BadGateway"
                    },
                    "503": {
                        "$ref": "#/components/responses/ErrorResponse-503-ServiceUnavailable"
                    },
                    "504": {
                        "$ref": "#/components/responses/ErrorResponse-504-GatewayTimeout"
                    }
                },
                "summary": "Consulta de dados de um paciente",
                "description": "Operação utilizada para consultar dados de pacientes da clínica"
            },
            "put": {
                "requestBody": {
                    "description": "Request para atualização de pacientes",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatientsRequest"
                            },
                            "examples": {
                                "PatientsRequestExample": {
                                    "value": {
                                        "name": "Peter Parker",
                                        "cpf": "123.789.012-34",
                                        "phone_number": "1691234-5789",
                                        "birthdate": "2001-08-10",
                                        "height": 1.78,
                                        "weight": 76,
                                        "smoker": false,
                                        "comorbidities": [
                                            "Cirrose hepática",
                                            "Valvopatia"
                                        ],
                                        "medical_insurance": {
                                            "id": "324.5231100.3432",
                                            "operator_code": "AMIL"
                                        },
                                        "address": {
                                            "street": "Rua Luis Gois, 1200",
                                            "complement": "apto 204",
                                            "district": "Vila Mariana",
                                            "city": "São Paulo",
                                            "state": "SP",
                                            "zipcode": "04043-050"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/PatientsResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse-400-BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/ErrorResponse-401-Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/ErrorResponse-403-Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorResponse-404-NotFound"
                    },
                    "415": {
                        "$ref": "#/components/responses/ErrorResponse-415-UnsupportedMediaType"
                    },
                    "422": {
                        "$ref": "#/components/responses/ErrorResponse-422-UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse-500-InternalServerError"
                    },
                    "502": {
                        "$ref": "#/components/responses/ErrorResponse-502-BadGateway"
                    },
                    "503": {
                        "$ref": "#/components/responses/ErrorResponse-503-ServiceUnavailable"
                    },
                    "504": {
                        "$ref": "#/components/responses/ErrorResponse-504-GatewayTimeout"
                    }
                },
                "summary": "Atualização de dados de um paciente",
                "description": "Operação utilizada para atualizar dados de pacientes da clínica"
            },
            "post": {
                "responses": {
                    "405": {
                        "$ref": "#/components/responses/ErrorResponse-405-MethodNotAllowed"
                    }
                },
                "summary": "Criação de pacientes",
                "description": "Operação utilizada para cadastrar novos pacientes da clínica"
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "Response para remoção de um paciente"
                    },
                    "401": {
                        "$ref": "#/components/responses/ErrorResponse-401-Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/ErrorResponse-403-Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorResponse-404-NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse-500-InternalServerError"
                    },
                    "502": {
                        "$ref": "#/components/responses/ErrorResponse-502-BadGateway"
                    },
                    "503": {
                        "$ref": "#/components/responses/ErrorResponse-503-ServiceUnavailable"
                    },
                    "504": {
                        "$ref": "#/components/responses/ErrorResponse-504-GatewayTimeout"
                    }
                },
                "summary": "Remoção de pacientes",
                "description": "Operação utilizada para apagar um paciente do cadastro da clínica"
            },
            "patch": {
                "requestBody": {
                    "description": "Request para atualização de pacientes",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatientsRequestPatch"
                            },
                            "examples": {
                                "PatientsRequestExample": {
                                    "value": {
                                        "name": "Peter Parker",
                                        "cpf": "123.789.012-34",
                                        "phone_number": "1691234-5789",
                                        "birthdate": "2001-08-10",
                                        "height": 1.78,
                                        "weight": 76,
                                        "smoker": false,
                                        "comorbidities": [
                                            "Cirrose hepática",
                                            "Valvopatia"
                                        ],
                                        "medical_insurance": {
                                            "id": "324.5231100.3432",
                                            "operator_code": "AMIL"
                                        },
                                        "address": {
                                            "street": "Rua Luis Gois, 1200",
                                            "complement": "apto 204",
                                            "district": "Vila Mariana",
                                            "city": "São Paulo",
                                            "state": "SP",
                                            "zipcode": "04043-050"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/PatientsResponse"
                    },
                    "400": {
                        "$ref": "#/components/responses/ErrorResponse-400-BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/ErrorResponse-401-Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/ErrorResponse-403-Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/ErrorResponse-404-NotFound"
                    },
                    "415": {
                        "$ref": "#/components/responses/ErrorResponse-415-UnsupportedMediaType"
                    },
                    "422": {
                        "$ref": "#/components/responses/ErrorResponse-422-UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/ErrorResponse-500-InternalServerError"
                    },
                    "502": {
                        "$ref": "#/components/responses/ErrorResponse-502-BadGateway"
                    },
                    "503": {
                        "$ref": "#/components/responses/ErrorResponse-503-ServiceUnavailable"
                    },
                    "504": {
                        "$ref": "#/components/responses/ErrorResponse-504-GatewayTimeout"
                    }
                },
                "summary": "Atualização de dados de um paciente",
                "description": "Operação utilizada para atualizar dados de pacientes da clínica"
            },
            "parameters": [
                {
                    "name": "id",
                    "description": "Campo identificador da entidade Pacientes",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        }
    },
    "components": {
        "schemas": {
            "MedicalInsurance": {
                "title": "Root Type for MedicalInsurance",
                "description": "Objeto que representa o plano de saúde de um paciente",
                "required": [
                    "id",
                    "operator_code"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Código de inscrição do paciente na sua operadora de plano de saúde",
                        "type": "string"
                    },
                    "operator_code": {
                        "description": "Código da operadora de plano de saúde na qual o paciente está inscrito",
                        "type": "string"
                    }
                },
                "example": {
                    "id": "324.5231100.3432",
                    "operator_code": "AMIL"
                }
            },
            "Address": {
                "title": "Root Type for Address",
                "description": "Objeto que representa o endereço residencial do paciente",
                "required": [
                    "city",
                    "district",
                    "state",
                    "street",
                    "zipcode"
                ],
                "type": "object",
                "properties": {
                    "street": {
                        "description": "Nome da rua onde o paciente reside",
                        "type": "string"
                    },
                    "complement": {
                        "description": "Complemento do endereço (ex: apartamento, bloco, etc)",
                        "type": "string"
                    },
                    "district": {
                        "description": "Nome do bairro",
                        "type": "string"
                    },
                    "city": {
                        "description": "Nome da cidade",
                        "type": "string"
                    },
                    "state": {
                        "description": "Nome do estado",
                        "type": "string"
                    },
                    "zipcode": {
                        "description": "Código postal - CEP",
                        "type": "string"
                    }
                },
                "example": {
                    "street": "Rua Luis Gois, 1200",
                    "complement": "apto 204",
                    "district": "Vila Mariana",
                    "city": "São Paulo",
                    "state": "SP",
                    "zipcode": "04043-050"
                }
            },
            "PatientsResponse": {
                "title": "Root Type for PatientsResponse",
                "description": "Representa um paciente da clínica - utilizado no response da consulta do objeto de instância",
                "required": [
                    "address",
                    "birthdate",
                    "cpf",
                    "height",
                    "id",
                    "name",
                    "phone_number",
                    "weight"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Código único identificador do paciente",
                        "type": "string"
                    },
                    "name": {
                        "description": "Nome completo do paciente",
                        "type": "string"
                    },
                    "cpf": {
                        "description": "Documento de identificação do paciente - CPF",
                        "type": "string"
                    },
                    "phone_number": {
                        "description": "Número de telefone do paciente para contato",
                        "type": "string"
                    },
                    "birthdate": {
                        "format": "date",
                        "description": "Data de nascimento do paciente",
                        "type": "string"
                    },
                    "height": {
                        "format": "double",
                        "description": "Altura do paciente",
                        "type": "number"
                    },
                    "weight": {
                        "format": "int32",
                        "description": "Peso do paciente",
                        "type": "integer"
                    },
                    "smoker": {
                        "description": "Indica se o paciente é fumante (true-Sim, false-Não)",
                        "type": "boolean"
                    },
                    "comorbidities": {
                        "description": "Lista de comorbidades que afetam o paciente (caso tenha)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "medical_insurance": {
                        "$ref": "#/components/schemas/MedicalInsurance",
                        "description": "Plano de saúde na qual o paciente está inscrito",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "operator_code": {
                                "type": "string"
                            }
                        }
                    },
                    "address": {
                        "$ref": "#/components/schemas/Address",
                        "description": "Endereço residencial do paciente",
                        "properties": {
                            "street": {
                                "type": "string"
                            },
                            "complement": {
                                "type": "string"
                            },
                            "district": {
                                "type": "string"
                            },
                            "city": {
                                "type": "string"
                            },
                            "state": {
                                "type": "string"
                            },
                            "zipcode": {
                                "type": "string"
                            }
                        }
                    }
                },
                "example": {
                    "id": "91aa9c65-1b5b-492c-905c-449677b390e1",
                    "name": "Peter Parker",
                    "cpf": "123.789.012-34",
                    "phone_number": "1691234-5789",
                    "birthdate": "2001-08-10",
                    "height": 1.78,
                    "weight": 76,
                    "smoker": false,
                    "comorbidities": [
                        "Cirrose hepática",
                        "Valvopatia"
                    ],
                    "medical_insurance": {
                        "id": "324.5231100.3432",
                        "operator_code": "AMIL"
                    },
                    "address": {
                        "street": "Rua Luis Gois, 1200",
                        "complement": "apto 204",
                        "district": "Vila Mariana",
                        "city": "São Paulo",
                        "state": "SP",
                        "zipcode": "04043-050"
                    }
                }
            },
            "PatientsRequest": {
                "title": "Root Type for PatientsResponse",
                "description": "Representa um paciente da clínica - utilizado no request da consulta do objeto de instância",
                "required": [
                    "address",
                    "birthdate",
                    "cpf",
                    "height",
                    "name",
                    "phone_number",
                    "weight"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Nome completo do paciente",
                        "type": "string"
                    },
                    "cpf": {
                        "description": "Documento de identificação do paciente - CPF",
                        "type": "string"
                    },
                    "phone_number": {
                        "description": "Número de telefone do paciente para contato",
                        "type": "string"
                    },
                    "birthdate": {
                        "format": "date",
                        "description": "Data de nascimento do paciente",
                        "type": "string"
                    },
                    "height": {
                        "format": "double",
                        "description": "Altura do paciente",
                        "type": "number"
                    },
                    "weight": {
                        "format": "int32",
                        "description": "Peso do paciente",
                        "type": "integer"
                    },
                    "smoker": {
                        "description": "Indica se o paciente é fumante (true-Sim, false-Não)",
                        "type": "boolean"
                    },
                    "comorbidities": {
                        "description": "Lista de comorbidades que afetam o paciente (caso tenha)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "medical_insurance": {
                        "$ref": "#/components/schemas/MedicalInsurance",
                        "description": "Plano de saúde na qual o paciente está inscrito",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "operator_code": {
                                "type": "string"
                            }
                        }
                    },
                    "address": {
                        "$ref": "#/components/schemas/Address",
                        "description": "Endereço residencial do paciente",
                        "properties": {
                            "street": {
                                "type": "string"
                            },
                            "complement": {
                                "type": "string"
                            },
                            "district": {
                                "type": "string"
                            },
                            "city": {
                                "type": "string"
                            },
                            "state": {
                                "type": "string"
                            },
                            "zipcode": {
                                "type": "string"
                            }
                        }
                    }
                },
                "example": {
                    "name": "Peter Parker",
                    "cpf": "123.789.012-34",
                    "phone_number": "1691234-5789",
                    "birthdate": "2001-08-10",
                    "height": 1.78,
                    "weight": 76,
                    "smoker": false,
                    "comorbidities": [
                        "Cirrose hepática",
                        "Valvopatia"
                    ],
                    "medical_insurance": {
                        "id": "324.5231100.3432",
                        "operator_code": "AMIL"
                    },
                    "address": {
                        "street": "Rua Luis Gois, 1200",
                        "complement": "apto 204",
                        "district": "Vila Mariana",
                        "city": "São Paulo",
                        "state": "SP",
                        "zipcode": "04043-050"
                    }
                }
            },
            "PatientsResponseList": {
                "title": "Root Type for PatientsResponse",
                "description": "Representa um paciente da clínica - utilizado no request da consulta do objeto de coleção",
                "required": [
                    "cpf",
                    "id",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Código único identificador do paciente",
                        "type": "string"
                    },
                    "name": {
                        "description": "Nome completo do paciente",
                        "type": "string"
                    },
                    "cpf": {
                        "description": "Documento de identificação do paciente - CPF",
                        "type": "string"
                    }
                },
                "example": {
                    "id": "91aa9c65-1b5b-492c-905c-449677b390e1",
                    "name": "Peter Parker",
                    "cpf": "123.789.012-34"
                }
            },
            "PatientsRequestPatch": {
                "title": "Root Type for PatientsResponse",
                "description": "Representa um paciente da clínica - utilizado no request da consulta do objeto de instância (específico para operação PATCH)",
                "required": [],
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Nome completo do paciente",
                        "type": "string"
                    },
                    "cpf": {
                        "description": "Documento de identificação do paciente - CPF",
                        "type": "string"
                    },
                    "phone_number": {
                        "description": "Número de telefone do paciente para contato",
                        "type": "string"
                    },
                    "birthdate": {
                        "format": "date",
                        "description": "Data de nascimento do paciente",
                        "type": "string"
                    },
                    "height": {
                        "format": "double",
                        "description": "Altura do paciente",
                        "type": "number"
                    },
                    "weight": {
                        "format": "int32",
                        "description": "Peso do paciente",
                        "type": "integer"
                    },
                    "smoker": {
                        "description": "Indica se o paciente é fumante (true-Sim, false-Não)",
                        "type": "boolean"
                    },
                    "comorbidities": {
                        "description": "Lista de comorbidades que afetam o paciente (caso tenha)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "medical_insurance": {
                        "$ref": "#/components/schemas/MedicalInsurance",
                        "description": "Plano de saúde na qual o paciente está inscrito",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "operator_code": {
                                "type": "string"
                            }
                        }
                    },
                    "address": {
                        "$ref": "#/components/schemas/Address",
                        "description": "Endereço residencial do paciente",
                        "properties": {
                            "street": {
                                "type": "string"
                            },
                            "complement": {
                                "type": "string"
                            },
                            "district": {
                                "type": "string"
                            },
                            "city": {
                                "type": "string"
                            },
                            "state": {
                                "type": "string"
                            },
                            "zipcode": {
                                "type": "string"
                            }
                        }
                    }
                },
                "example": {
                    "name": "Peter Parker",
                    "cpf": "123.789.012-34",
                    "phone_number": "1691234-5789",
                    "birthdate": "2001-08-10",
                    "height": 1.78,
                    "weight": 76,
                    "smoker": false,
                    "comorbidities": [
                        "Cirrose hepática",
                        "Valvopatia"
                    ],
                    "medical_insurance": {
                        "id": "324.5231100.3432",
                        "operator_code": "AMIL"
                    },
                    "address": {
                        "street": "Rua Luis Gois, 1200",
                        "complement": "apto 204",
                        "district": "Vila Mariana",
                        "city": "São Paulo",
                        "state": "SP",
                        "zipcode": "04043-050"
                    }
                }
            },
            "ErrorMessage": {
                "title": "Root Type for ErrorMessage",
                "description": "Mensagem de erro a ser retornada no body do response",
                "required": [
                    "description",
                    "field",
                    "issue"
                ],
                "type": "object",
                "properties": {
                    "issue": {
                        "description": "Código do erro | Required",
                        "type": "string"
                    },
                    "description": {
                        "description": "Descrição do erro",
                        "type": "string"
                    },
                    "location": {
                        "description": "Localização do campo que causou o erro",
                        "type": "string"
                    },
                    "field": {
                        "description": "Nome do campo que causou o erro",
                        "type": "string"
                    },
                    "value": {
                        "description": "Valor do campo que causou o erro",
                        "type": "string"
                    }
                },
                "example": {
                    "issue": "INVALID_PARAMETER_VALUE",
                    "description": "Field value is invalid",
                    "location": "body",
                    "field": "cpf",
                    "value": "000.000.000-00"
                }
            }
        },
        "responses": {
            "PatientsResponse": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/PatientsResponse"
                        },
                        "examples": {
                            "PatientsResponseExample": {
                                "value": {
                                    "id": "91aa9c65-1b5b-492c-905c-449677b390e1",
                                    "name": "Peter Parker",
                                    "cpf": "123.789.012-34",
                                    "phone_number": "1691234-5789",
                                    "birthdate": "2001-08-10",
                                    "height": 1.78,
                                    "weight": 76,
                                    "smoker": false,
                                    "comorbidities": [
                                        "Cirrose hepática",
                                        "Valvopatia"
                                    ],
                                    "medical_insurance": {
                                        "id": "324.5231100.3432",
                                        "operator_code": "AMIL"
                                    },
                                    "address": {
                                        "street": "Rua Luis Gois, 1200",
                                        "complement": "apto 204",
                                        "district": "Vila Mariana",
                                        "city": "São Paulo",
                                        "state": "SP",
                                        "zipcode": "04043-050"
                                    }
                                }
                            }
                        }
                    }
                },
                "description": "Representa um paciente da clínica - utilizado no response da consulta do objeto de instância"
            },
            "PatientsResponseList": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/PatientsResponseList"
                        },
                        "examples": {
                            "PatientsResponseListExample": {
                                "value": {
                                    "id": "324.5231100.3432",
                                    "operator_code": "AMIL"
                                }
                            }
                        }
                    }
                },
                "description": "Representa um paciente da clínica - utilizado no request da consulta do objeto de coleção"
            },
            "ErrorResponse-400-BadRequest": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorMessage"
                        },
                        "examples": {
                            "BadRequestExample": {
                                "value": {
                                    "issue": "MALFORMED_REQUEST",
                                    "description": "The request body is not well formed",
                                    "location": "body"
                                }
                            }
                        }
                    }
                },
                "description": "Mensagem de erro a ser retornada no body do response (400-BadRequest)"
            },
            "ErrorResponse-401-Unauthorized": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorMessage"
                        },
                        "examples": {
                            "UnauthorizedExample": {
                                "value": {
                                    "issue": "NOT_AUTHORIZED",
                                    "description": "Authorization failed due to insufficient permissions",
                                    "location": "header",
                                    "field": "Authorization"
                                }
                            }
                        }
                    }
                },
                "description": "Mensagem de erro a ser retornada no body do response (401-Unauthorized)"
            },
            "ErrorResponse-403-Forbidden": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorMessage"
                        },
                        "examples": {
                            "ForbiddenExample": {
                                "value": {
                                    "issue": "PERMISSION_DENIED",
                                    "description": "You do not have permission to access or perform operations on this resource",
                                    "location": "header",
                                    "field": "Authorization"
                                }
                            }
                        }
                    }
                },
                "description": "Mensagem de erro a ser retornada no body do response (403-Forbidden)"
            },
            "ErrorResponse-404-NotFound": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorMessage"
                        },
                        "examples": {
                            "NotFoundExample": {
                                "value": {
                                    "issue": "INVALID_RESOURCE_ID",
                                    "description": "Specified resource ID does not exist",
                                    "location": "path_parameter",
                                    "field": "id",
                                    "value": "X"
                                }
                            }
                        }
                    }
                },
                "description": "Mensagem de erro a ser retornada no body do response (404-Not Found)"
            },
            "ErrorResponse-415-UnsupportedMediaType": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorMessage"
                        },
                        "examples": {
                            "UnsupportedMediaTypeExample": {
                                "value": {
                                    "issue": "INVALID_CONTENT_TYPE",
                                    "description": "The specified Content Type header is invalid"
                                }
                            }
                        }
                    }
                },
                "description": "Mensagem de erro a ser retornada no body do response (415-Unsupported Media Type)"
            },
            "ErrorResponse-422-UnprocessableEntity": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorMessage"
                        },
                        "examples": {
                            "UnprocessableEntityExample": {
                                "value": {
                                    "issue": "INVALID_PARAMETER_VALUE",
                                    "description": "Field value is invalid",
                                    "location": "body",
                                    "field": "cpf",
                                    "value": "000.000.000-00"
                                }
                            }
                        }
                    }
                },
                "description": "Mensagem de erro a ser retornada no body do response (422-Unprocessable Entity)"
            },
            "ErrorResponse-500-InternalServerError": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorMessage"
                        },
                        "examples": {
                            "InternalServerErrorExample": {
                                "value": {
                                    "issue": "INTERNAL_SERVER_ERROR",
                                    "description": "A system or application error occurred"
                                }
                            }
                        }
                    }
                },
                "description": "Mensagem de erro a ser retornada no body do response (500-Internal Server Error)"
            },
            "ErrorResponse-502-BadGateway": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorMessage"
                        },
                        "examples": {
                            "BadGatewayExample": {
                                "value": {
                                    "issue": "BAD_GATEWAY",
                                    "description": "The server returned an invalid response"
                                }
                            }
                        }
                    }
                },
                "description": "Mensagem de erro a ser retornada no body do response (502-Bad Gateway)"
            },
            "ErrorResponse-503-ServiceUnavailable": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorMessage"
                        },
                        "examples": {
                            "ServiceUnavailableExample": {
                                "value": {
                                    "issue": "SERVICE_UNAVAILABLE",
                                    "description": "The server cannot handle the request for a service due to temporary maintenance"
                                }
                            }
                        }
                    }
                },
                "description": "Mensagem de erro a ser retornada no body do response (503-Service Unavailable)"
            },
            "ErrorResponse-504-GatewayTimeout": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorMessage"
                        },
                        "examples": {
                            "GatewayTimeoutExample": {
                                "value": {
                                    "issue": "GATEWAY_TIMEOUT",
                                    "description": "The server did not send the response in the expected time"
                                }
                            }
                        }
                    }
                },
                "description": "Mensagem de erro a ser retornada no body do response (504-Gateway Timeout)"
            },
            "ErrorResponse-405-MethodNotAllowed": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorMessage"
                        },
                        "examples": {
                            "MethodNotAllowedExample": {
                                "value": {
                                    "issue": "METHOD_NOT_SUPPORTED",
                                    "description": "Invalid path and HTTP method combination"
                                }
                            }
                        }
                    }
                },
                "description": "Mensagem de erro a ser retornada no body do response (405-Method Not Allowed)"
            }
        }
    }
}