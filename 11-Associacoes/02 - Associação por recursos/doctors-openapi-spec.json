{
    "openapi": "3.0.2",
    "info": {
        "title": "Doctors",
        "version": "1.0.0",
        "description": "ProHealth - Contrato da API de Médicos"
    },
    "paths": {
        "/v1/doctors": {
            "summary": "Rota para manutenção da lista de médicos",
            "description": "Este recurso é a representação dos médicos que atendem na clínica",
            "get": {
                "parameters": [
                    {
                        "name": "name",
                        "description": "Nome completo do médico",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    },
                    {
                        "name": "cpf",
                        "description": "Documento de identificação do médico - CPF",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    },
                    {
                        "name": "phone_number",
                        "description": "Número de telefone do médico para contato",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    },
                    {
                        "name": "_limit",
                        "description": "Número de elementos retornado por página (default 50)",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "name": "_offset",
                        "description": "Posição do elemento inicial (default 1)",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "name": "_sort",
                        "description": "Lista de campos, separados por vírgula, utilizados como critérios de ordenação - utilize o formato [+/-][nome_do_campo]",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DoctorResponseList"
                                },
                                "examples": {
                                    "DoctorResponseListExample": {
                                        "value": {
                                            "id": "25",
                                            "name": "Peter Parker",
                                            "cpf": "123.789.012-34"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para listagem de médicos"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "UnauthorizedExample": {
                                        "value": {
                                            "issue": "NOT_AUTHORIZED",
                                            "description": "Authorization failed due to insufficient permissions",
                                            "location": "header",
                                            "field": "Authorization"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 401 - Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "ForbiddenExample": {
                                        "value": {
                                            "issue": "PERMISSION_DENIED",
                                            "description": "You do not have permission to access or perform operations on this resource",
                                            "location": "header",
                                            "field": "Authorization"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 403 - Forbidden"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "InternalServerError": {
                                        "value": {
                                            "issue": "INTERNAL_SERVER_ERROR",
                                            "description": "A system or application error occurred"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 500 - Internal Server Error"
                    },
                    "502": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "BadGatewayError": {
                                        "value": {
                                            "issue": "BAD_GATEWAY",
                                            "description": "The server returned an invalid response"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 502 - Bad Gateway"
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "ServiceUnavailableError": {
                                        "value": {
                                            "issue": "SERVICE_UNAVAILABLE",
                                            "description": "The server cannot handle the request for a service due to temporary maintenance"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 503 - Service Unavailable"
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "GatewayTimeoutError": {
                                        "value": {
                                            "issue": "GATEWAY_TIMEOUT",
                                            "description": "The server did not send the response in the expected time"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 504 - Gateway Timeout"
                    }
                },
                "summary": "Consulta de médicos",
                "description": "Operação utilizada para consultar todos os médicos da clínica"
            },
            "put": {
                "responses": {
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "MethodNotAllowedExample": {
                                        "value": {
                                            "issue": "METHOD_NOT_SUPPORTED",
                                            "description": "Invalid path and HTTP method combination"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 405 - Method Not Allowed"
                    }
                },
                "summary": "Atualização de médicos",
                "description": "Operação utilizada para atualizar dados de médicos da clínica"
            },
            "post": {
                "requestBody": {
                    "description": "Request para criação de médicos",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DoctorRequest"
                            },
                            "examples": {
                                "DoctorRequestExample": {
                                    "value": {
                                        "name": "Peter Parker",
                                        "cpf": "123.789.012-34",
                                        "phone_number": "1691234-5789"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DoctorResponseDetail"
                                },
                                "examples": {
                                    "DoctorResponseDetailExample": {
                                        "value": {
                                            "id": "25",
                                            "name": "Peter Parker",
                                            "cpf": "123.789.012-34",
                                            "phone_number": "1691234-5789"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para criação de médicos"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "BadRequestExample": {
                                        "value": {
                                            "issue": "MALFORMED_REQUEST",
                                            "description": "The request body is not well formed",
                                            "location": "body"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 400 - Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "UnauthorizedExample": {
                                        "value": {
                                            "issue": "NOT_AUTHORIZED",
                                            "description": "Authorization failed due to insufficient permissions",
                                            "location": "header",
                                            "field": "Authorization"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 401 - Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "ForbiddenExample": {
                                        "value": {
                                            "issue": "PERMISSION_DENIED",
                                            "description": "You do not have permission to access or perform operations on this resource",
                                            "location": "header",
                                            "field": "Authorization"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 403 - Forbidden"
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "UnsupportedMediaTypeExample": {
                                        "value": {
                                            "issue": "INVALID_CONTENT_TYPE",
                                            "description": "The specified Content Type header is invalid"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 415 - Unsupported Media Type"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "UnprocessableEntityExample": {
                                        "value": {
                                            "issue": "INVALID_PARAMETER_VALUE",
                                            "description": "Field value is invalid",
                                            "location": "body",
                                            "field": "cpf",
                                            "value": "000.000.000-00"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 422 - Unprocessable Entity"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "InternalServerError": {
                                        "value": {
                                            "issue": "INTERNAL_SERVER_ERROR",
                                            "description": "A system or application error occurred"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 500 - Internal Server Error"
                    },
                    "502": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "BadGatewayError": {
                                        "value": {
                                            "issue": "BAD_GATEWAY",
                                            "description": "The server returned an invalid response"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 502 - Bad Gateway"
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "ServiceUnavailableError": {
                                        "value": {
                                            "issue": "SERVICE_UNAVAILABLE",
                                            "description": "The server cannot handle the request for a service due to temporary maintenance"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 503 - Service Unavailable"
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "GatewayTimeoutError": {
                                        "value": {
                                            "issue": "GATEWAY_TIMEOUT",
                                            "description": "The server did not send the response in the expected time"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 504 - Gateway Timeout"
                    }
                },
                "summary": "Criação de médicos",
                "description": "Operação utilizada para cadastrar novos médicos da clínica"
            },
            "delete": {
                "responses": {
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "MethodNotAllowedExample": {
                                        "value": {
                                            "issue": "METHOD_NOT_SUPPORTED",
                                            "description": "Invalid path and HTTP method combination"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 405 - Method Not Allowed"
                    }
                },
                "summary": "Remoção de médicos",
                "description": "Operação utilizada para apagar médicos do cadastro da clínica"
            },
            "patch": {
                "responses": {
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "MethodNotAllowedExample": {
                                        "value": {
                                            "issue": "METHOD_NOT_SUPPORTED",
                                            "description": "Invalid path and HTTP method combination"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 405 - Method Not Allowed"
                    }
                },
                "summary": "Atualização de médicos",
                "description": "Operação utilizada para atualizar dados de médicos da clínica"
            }
        },
        "/v1/doctors/{id}": {
            "summary": "Rota para manutenção das informações sobre um médico",
            "description": "Este recurso é a representação dos dados cada médico que atende na clínica",
            "get": {
                "parameters": [
                    {
                        "name": "id",
                        "description": "Campo identificador da entidade Médicos",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "_fields",
                        "description": "Lista de campos, separados por vírgula, a serem retornados no body do response",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DoctorResponseDetail"
                                },
                                "examples": {
                                    "DoctorResponseDetailExample": {
                                        "value": {
                                            "id": "25",
                                            "name": "Peter Parker",
                                            "cpf": "123.789.012-34",
                                            "phone_number": "1691234-5789"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para consulta dos dados de um médico"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "UnauthorizedExample": {
                                        "value": {
                                            "issue": "NOT_AUTHORIZED",
                                            "description": "Authorization failed due to insufficient permissions",
                                            "location": "header",
                                            "field": "Authorization"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 401 - Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "ForbiddenExample": {
                                        "value": {
                                            "issue": "PERMISSION_DENIED",
                                            "description": "You do not have permission to access or perform operations on this resource",
                                            "location": "header",
                                            "field": "Authorization"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 403 - Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "NotFoundExample": {
                                        "value": {
                                            "issue": "INVALID_RESOURCE_ID",
                                            "description": "Specified resource ID does not exist",
                                            "location": "path_parameter",
                                            "field": "id",
                                            "value": "X"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 404 - Not Found"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "InternalServerError": {
                                        "value": {
                                            "issue": "INTERNAL_SERVER_ERROR",
                                            "description": "A system or application error occurred"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 500 - Internal Server Error"
                    },
                    "502": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "BadGatewayError": {
                                        "value": {
                                            "issue": "BAD_GATEWAY",
                                            "description": "The server returned an invalid response"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 502 - Bad Gateway"
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "ServiceUnavailableError": {
                                        "value": {
                                            "issue": "SERVICE_UNAVAILABLE",
                                            "description": "The server cannot handle the request for a service due to temporary maintenance"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 503 - Service Unavailable"
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "GatewayTimeoutError": {
                                        "value": {
                                            "issue": "GATEWAY_TIMEOUT",
                                            "description": "The server did not send the response in the expected time"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 504 - Gateway Timeout"
                    }
                },
                "summary": "Consulta de dados de um médico",
                "description": "Operação utilizada para consultar dados de médicos da clínica"
            },
            "put": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DoctorResponseDetail"
                                },
                                "examples": {
                                    "DoctorResponseDetailExample": {
                                        "value": {
                                            "id": "25",
                                            "name": "Peter Parker",
                                            "cpf": "123.789.012-34",
                                            "phone_number": "1691234-5789"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para atualização dos dados de um médico"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "BadRequestExample": {
                                        "value": {
                                            "issue": "MALFORMED_REQUEST",
                                            "description": "The request body is not well formed",
                                            "location": "body"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 400 - Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "UnauthorizedExample": {
                                        "value": {
                                            "issue": "NOT_AUTHORIZED",
                                            "description": "Authorization failed due to insufficient permissions",
                                            "location": "header",
                                            "field": "Authorization"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 401 - Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "ForbiddenExample": {
                                        "value": {
                                            "issue": "PERMISSION_DENIED",
                                            "description": "You do not have permission to access or perform operations on this resource",
                                            "location": "header",
                                            "field": "Authorization"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 403 - Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "NotFoundExample": {
                                        "value": {
                                            "issue": "INVALID_RESOURCE_ID",
                                            "description": "Specified resource ID does not exist",
                                            "location": "path_parameter",
                                            "field": "id",
                                            "value": "X"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 404 - Not Found"
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "UnsupportedMediaTypeExample": {
                                        "value": {
                                            "issue": "INVALID_CONTENT_TYPE",
                                            "description": "The specified Content Type header is invalid"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 415 - Unsupported Media Type"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "UnprocessableEntityExample": {
                                        "value": {
                                            "issue": "INVALID_PARAMETER_VALUE",
                                            "description": "Field value is invalid",
                                            "location": "body",
                                            "field": "cpf",
                                            "value": "000.000.000-00"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 422 - Unprocessable Entity"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "InternalServerError": {
                                        "value": {
                                            "issue": "INTERNAL_SERVER_ERROR",
                                            "description": "A system or application error occurred"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 500 - Internal Server Error"
                    },
                    "502": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "BadGatewayError": {
                                        "value": {
                                            "issue": "BAD_GATEWAY",
                                            "description": "The server returned an invalid response"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 502 - Bad Gateway"
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "ServiceUnavailableError": {
                                        "value": {
                                            "issue": "SERVICE_UNAVAILABLE",
                                            "description": "The server cannot handle the request for a service due to temporary maintenance"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 503 - Service Unavailable"
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "GatewayTimeoutError": {
                                        "value": {
                                            "issue": "GATEWAY_TIMEOUT",
                                            "description": "The server did not send the response in the expected time"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 504 - Gateway Timeout"
                    }
                },
                "summary": "Atualização de dados de um médico",
                "description": "Operação utilizada para atualizar dados de médicos da clínica"
            },
            "post": {
                "parameters": [
                    {
                        "name": "id",
                        "description": "Campo identificador da entidade Médicos",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "405": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "MethodNotAllowedExample": {
                                        "value": {
                                            "issue": "METHOD_NOT_SUPPORTED",
                                            "description": "Invalid path and HTTP method combination"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 405 - Method Not Allowed"
                    }
                },
                "summary": "Criação de médicos",
                "description": "Operação utilizada para cadastrar novos médicos da clínica"
            },
            "delete": {
                "parameters": [
                    {
                        "name": "id",
                        "description": "Campo identificador da entidade médicos",
                        "schema": {
                            "type": "string"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Response para remoção de um médico"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "UnauthorizedExample": {
                                        "value": {
                                            "issue": "NOT_AUTHORIZED",
                                            "description": "Authorization failed due to insufficient permissions",
                                            "location": "header",
                                            "field": "Authorization"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 401 - Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "ForbiddenExample": {
                                        "value": {
                                            "issue": "PERMISSION_DENIED",
                                            "description": "You do not have permission to access or perform operations on this resource",
                                            "location": "header",
                                            "field": "Authorization"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 403 - Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "NotFoundExample": {
                                        "value": {
                                            "issue": "INVALID_RESOURCE_ID",
                                            "description": "Specified resource ID does not exist",
                                            "location": "path_parameter",
                                            "field": "id",
                                            "value": "X"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 404 - Not Found"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "InternalServerError": {
                                        "value": {
                                            "issue": "INTERNAL_SERVER_ERROR",
                                            "description": "A system or application error occurred"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 500 - Internal Server Error"
                    },
                    "502": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "BadGatewayError": {
                                        "value": {
                                            "issue": "BAD_GATEWAY",
                                            "description": "The server returned an invalid response"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 502 - Bad Gateway"
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "ServiceUnavailableError": {
                                        "value": {
                                            "issue": "SERVICE_UNAVAILABLE",
                                            "description": "The server cannot handle the request for a service due to temporary maintenance"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 503 - Service Unavailable"
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "GatewayTimeoutError": {
                                        "value": {
                                            "issue": "GATEWAY_TIMEOUT",
                                            "description": "The server did not send the response in the expected time"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 504 - Gateway Timeout"
                    }
                },
                "summary": "Remoção de médicos",
                "description": "Operação utilizada para apagar um médico do cadastro da clínica"
            },
            "patch": {
                "requestBody": {
                    "description": "Request para atualização de médicos",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DoctorRequestPatch"
                            },
                            "examples": {
                                "DoctorRequestPatchExample": {
                                    "value": {
                                        "name": "Peter Parker",
                                        "cpf": "123.789.012-34",
                                        "phone_number": "1691234-5789"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DoctorResponseDetail"
                                },
                                "examples": {
                                    "DoctorResponseDetailExample": {
                                        "value": {
                                            "id": "25",
                                            "name": "Peter Parker",
                                            "cpf": "123.789.012-34",
                                            "phone_number": "1691234-5789"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para atualização dos dados de um médico"
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "BadRequestExample": {
                                        "value": {
                                            "issue": "MALFORMED_REQUEST",
                                            "description": "The request body is not well formed",
                                            "location": "body"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 400 - Bad Request"
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "UnauthorizedExample": {
                                        "value": {
                                            "issue": "NOT_AUTHORIZED",
                                            "description": "Authorization failed due to insufficient permissions",
                                            "location": "header",
                                            "field": "Authorization"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 401 - Unauthorized"
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "ForbiddenExample": {
                                        "value": {
                                            "issue": "PERMISSION_DENIED",
                                            "description": "You do not have permission to access or perform operations on this resource",
                                            "location": "header",
                                            "field": "Authorization"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 403 - Forbidden"
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "NotFoundExample": {
                                        "value": {
                                            "issue": "INVALID_RESOURCE_ID",
                                            "description": "Specified resource ID does not exist",
                                            "location": "path_parameter",
                                            "field": "id",
                                            "value": "X"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 404 - Not Found"
                    },
                    "415": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "UnsupportedMediaTypeExample": {
                                        "value": {
                                            "issue": "INVALID_CONTENT_TYPE",
                                            "description": "The specified Content Type header is invalid"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 415 - Unsupported Media Type"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "UnprocessableEntityExample": {
                                        "value": {
                                            "issue": "INVALID_PARAMETER_VALUE",
                                            "description": "Field value is invalid",
                                            "location": "body",
                                            "field": "cpf",
                                            "value": "000.000.000-00"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 422 - Unprocessable Entity"
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "InternalServerError": {
                                        "value": {
                                            "issue": "INTERNAL_SERVER_ERROR",
                                            "description": "A system or application error occurred"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 500 - Internal Server Error"
                    },
                    "502": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "BadGatewayExample": {
                                        "value": {
                                            "issue": "BAD_GATEWAY",
                                            "description": "The server returned an invalid response"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 502 - Bad Gateway"
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "ServiceUnavailableExample": {
                                        "value": {
                                            "issue": "SERVICE_UNAVAILABLE",
                                            "description": "The server cannot handle the request for a service due to temporary maintenance"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 503 - Service Unavailable"
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorMessage"
                                },
                                "examples": {
                                    "GatewayTimeoutExample": {
                                        "value": {
                                            "issue": "GATEWAY_TIMEOUT",
                                            "description": "The server did not send the response in the expected time"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Response para erro 504 - Gateway Timeout"
                    }                    
                },
                "summary": "Atualização de dados de um médico",
                "description": "Operação utilizada para atualizar dados de médicos da clínica"
            },
            "parameters": [
                {
                    "name": "id",
                    "description": "Campo identificador da entidade Médico",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        }
    },
    "components": {
        "schemas": {
            "DoctorResponseList": {
                "title": "Root Type for DoctorResponseList",
                "description": "Representa um médico da clínica - utilizado no request da consulta do objeto de coleção",
                "required": [
                    "cpf",
                    "id",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Código único identificador do médico",
                        "type": "string"
                    },
                    "name": {
                        "description": "Nome completo do médico",
                        "type": "string"
                    },
                    "cpf": {
                        "description": "Documento de identificação do médico - CPF",
                        "type": "string"
                    }
                },
                "example": {
                    "id": "25",
                    "name": "Peter Parker",
                    "cpf": "123.789.012-34"
                }
            },
            "DoctorRequest": {
                "title": "Root Type for DoctorRequest",
                "description": "Representa um médico da clínica - utilizado no request da criação do objeto de instância",
                "required": [
                    "cpf",
                    "name",
                    "phone_number"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Nome completo do médico",
                        "type": "string"
                    },
                    "cpf": {
                        "description": "Documento de identificação do médico - CPF",
                        "type": "string"
                    },
                    "phone_number": {
                        "description": "Número de telefone do médico para contato",
                        "type": "string"
                    }
                },
                "example": {
                    "name": "Peter Parker",
                    "cpf": "123.789.012-34",
                    "phone_number": "1691234-5789"
                }
            },
            "DoctorResponseDetail": {
                "title": "Root Type for DoctorResponse",
                "description": "Representa um médico da clínica - utilizado no response da consulta do objeto de instância",
                "required": [
                    "cpf",
                    "id",
                    "name",
                    "phone_number"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Código único identificador do médico",
                        "type": "string"
                    },
                    "name": {
                        "description": "Nome completo do médico",
                        "type": "string"
                    },
                    "cpf": {
                        "description": "Documento de identificação do médico - CPF",
                        "type": "string"
                    },
                    "phone_number": {
                        "description": "Número de telefone do médico para contato",
                        "type": "string"
                    }
                },
                "example": {
                    "id": "25",
                    "name": "Peter Parker",
                    "cpf": "123.789.012-34",
                    "phone_number": "1691234-5789"
                }
            },
            "ErrorMessage": {
                "title": "Root Type for ErrorMessage",
                "description": "Mensagem de erro a ser retornada no body do response",
                "required": [
                    "description",
                    "issue"
                ],
                "type": "object",
                "properties": {
                    "issue": {
                        "description": "Código do erro",
                        "type": "string"
                    },
                    "description": {
                        "description": "Descrição do erro",
                        "type": "string"
                    },
                    "location": {
                        "description": "Localização do campo que causou o erro",
                        "type": "string"
                    },
                    "field": {
                        "description": "Nome do campo que causou o erro",
                        "type": "string"
                    },
                    "value": {
                        "description": "Valor do campo que causou o erro",
                        "type": "string"
                    }
                },
                "example": {
                    "issue": "INVALID_PARAMETER_VALUE",
                    "description": "Field value is invalid",
                    "location": "body",
                    "field": "cpf",
                    "value": "000.000.000-00"
                }
            },
            "DoctorRequestPatch": {
                "title": "Root Type for DoctorRequest",
                "description": "Representa um médico da clínica - utilizado no request da criação do objeto de instância",
                "type": "object",
                "properties": {
                    "name": {
                        "description": "Nome completo do médico",
                        "type": "string"
                    },
                    "cpf": {
                        "description": "Documento de identificação do médico - CPF",
                        "type": "string"
                    },
                    "phone_number": {
                        "description": "Número de telefone do médico para contato",
                        "type": "string"
                    }
                },
                "example": {
                    "name": "Peter Parker",
                    "cpf": "123.789.012-34",
                    "phone_number": "1691234-5789"
                }
            }
        },
        "responses": {
            "DoctorResponseDetail": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/DoctorResponseDetail"
                        },
                        "examples": {
                            "DoctorResponseDetailExample": {
                                "value": {
                                    "id": "25",
                                    "name": "Peter Parker",
                                    "cpf": "123.789.012-34",
                                    "phone_number": "1691234-5789"
                                }
                            }
                        }
                    }
                },
                "description": "Response com todos os campos da entidade Médico"
            },
            "DoctorResponseList": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/DoctorResponseList"
                        },
                        "examples": {
                            "DoctorResponseListExample": {
                                "value": {
                                    "id": "25",
                                    "name": "Peter Parker",
                                    "cpf": "123.789.012-34"
                                }
                            }
                        }
                    }
                },
                "description": "Response com os principais campos da entidade Médico"
            }
        }
    }
}